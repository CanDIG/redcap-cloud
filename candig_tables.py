"""
CanDIG tables/fields defined as empty dicts for mapping scripts
"""

patients = dict(
    patientId   = "",
    otherIds    = "",
    dateOfBirth = "",
    gender      = "",
    ethnicity   = "",
    race        = "",
    provinceOfResidence = "",
    dateOfDeath = "",
    causeOfDeath = "",
    autopsyTissueForResearch = "",
    priorMalignancy = "",
    dateOfPriorMalignancy = "",
    familyHistoryAndRiskFactors = "",
    familyHistoryOfPredispositionSyndrome = "",
    detailsOfPredispositionSyndrome = "",
    geneticCancerSyndrome = "",
    otherGeneticConditionOrSignificantComorbidity = "",
    occupationalOrEnvironmentalExposure = ""
)
enrollments = dict(
    patientId = "",
    enrollmentInstitution = "",
    enrollmentApprovalDate = "",
    crossEnrollment = "",
    otherPersonalizedMedicineStudyName = "",
    otherPersonalizedMedicineStudyId = "",
    ageAtEnrollment = "",
    eligibilityCategory = "",
    statusAtEnrollment = "",
    primaryOncologistName = "",
    primaryOncologistContact = "",
    referringPhysicianName = "",
    referringPhysicianContact = "",
    summaryOfIdRequest = "",
    treatingCentreName = "",
    treatingCentreProvince = ""
)
consents = dict(
    patientId = "",
    consentId = "",
    consentDate = "",
    consentVersion = "",
    patientConsentedTo = "",
    reasonForRejection = "",
    wasAssentObtained = "",
    dateOfAssent = "",
    assentFormVersion = "",
    ifAssentNotObtainedWhyNot = "",
    reconsentDate = "",
    reconsentVersion = "",
    consentingCoordinatorName = "",
    previouslyConsented = "",
    nameOfOtherBiobank = "",
    hasConsentBeenWithdrawn = "",
    dateOfConsentWithdrawal = "",
    typeOfConsentWithdrawal = "",
    reasonForConsentWithdrawal = "",
    consentFormComplete = ""
)
diagnoses = dict(
    patientId = "",
    diagnosisId = "",
    diagnosisDate = "",
    ageAtDiagnosis = "",
    cancerType = "",
    classification = "",
    cancerSite = "",
    histology = "",
    methodOfDefinitiveDiagnosis = "",
    sampleType = "",
    sampleSite = "",
    tumorGrade = "",
    gradingSystemUsed = "",
    sitesOfMetastases = "",
    stagingSystem = "",
    versionOrEditionOfTheStagingSystem = "",
    specificTumorStageAtDiagnosis = "",
    prognosticBiomarkers = "",
    biomarkerQuantification = "",
    additionalMolecularTesting = "",
    additionalTestType = "",
    laboratoryName = "",
    laboratoryAddress = "",
    siteOfMetastases = "",
    stagingSystemVersion = "",
    specificStage = "", 
    cancerSpecificBiomarkers = "",
    additionalMolecularDiagnosticTestingPerformed = "",
    additionalTest = "" 
)
samples = dict(
    patientId = "",
    sampleId = "",
    diagnosisId = "",
    localBiobankId = "" ,
    collectionDate = "",
    collectionHospital = "" ,
    sampleType = "",
    tissueDiseaseState = "",
    anatomicSiteTheSampleObtainedFrom = "",
    cancerType = "",
    cancerSubtype = "",
    pathologyReportId = "",
    morphologicalCode = "",
    topologicalCode = "",
    shippingDate = "",
    receivedDate = "",
    qualityControlPerformed = "",
    estimatedTumorContent = "",
    quantity = "",
    units = "",
    associatedBiobank = "",
    otherBiobank = "",
    sopFollowed = "",
    ifNotExplainAnyDeviation = ""
)
treatments = dict(
    patientId = "",
    courseNumber = "",
    therapeuticModality = "",
    systematicTherapyAgentName = "",
    treatmentPlanType = "",
    treatmentIntent = "",
    startDate = "",
    stopDate = "",
    reasonForEndingTheTreatment = "",
    protocolNumberOrCode = "",
    surgeryDetails = "",
    radiotherapyDetails = "",
    chemotherapyDetails = "",
    hematopoieticCellTransplant = "",
    immunotherapyDetails = "",
    responseToTreatment = "",
    dateOfRecurrenceOrProgressionAfterThisTreatment = "",
    unexpectedOrUnusualToxicityDuringTreatment = "",
    drugListOrAgent = "",
    drugIdNumbers = "",
    responseCriteriaUsed = ""
)
outcomes = dict(
    patientId = "",
    physicalExamId = "",
    dateOfAssessment = "",
    diseaseResponseOrStatus = "",
    otherResponseClassification = "",
    minimalResidualDiseaseAssessment = "",
    methodOfResponseEvaluation = "",
    responseCriteriaUsed = "",
    summaryStage = "",
    sitesOfAnyProgressionOrRecurrence = "",
    vitalStatus = "",
    height = "",
    weight = "",
    heightUnits = "",
    weightUnits = "",
    performanceStatus = ""
)
complications = dict(
    patientId = "",
    date = "",
    lateComplicationOfTherapyDeveloped = "",
    lateToxicityDetail = "",
    suspectedTreatmentInducedNeoplasmDeveloped = "",
    treatmentInducedNeoplasmDetails = ""
)
tumourboards = dict(
    patientId = "",
    dateOfMolecularTumorBoard = "",
    typeOfSampleAnalyzed = "",
    typeOfTumourSampleAnalyzed = "",
    analysesDiscussed = "",
    somaticSampleType = "",
    normalExpressionComparator = "",
    diseaseExpressionComparator = "",
    hasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer = "",
    actionableTargetFound = "",
    molecularTumorBoardRecommendation = "",
    germlineDnaSampleId = "",
    tumorDnaSampleId = "",
    tumorRnaSampleId = "",
    germlineSnvDiscussed = "",
    somaticSnvDiscussed = "",
    cnvsDiscussed = "",
    structuralVariantDiscussed = "",
    classificationOfVariants = "",
    clinicalValidationProgress = "",
    typeOfValidation = "",
    agentOrDrugClass = "",
    levelOfEvidenceForExpressionTargetAgentMatch = "",
    didTreatmentPlanChangeBasedOnProfilingResult = "",
    howTreatmentHasAlteredBasedOnProfiling = "",
    reasonTreatmentPlanDidNotChangeBasedOnProfiling = "",
    detailsOfTreatmentPlanImpact = "",
    patientOrFamilyInformedOfGermlineVariant = "",
    patientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling = "",
    summaryReport = "" 
)